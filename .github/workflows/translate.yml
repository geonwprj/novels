name: Translation Processing

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.sha }}
  cancel-in-progress: true

on:
  push:
    branches:
      - books
    paths:
      - 'processing/**.json'

jobs:
  translate:
    runs-on: ubuntu-latest
    env:
      LLM_MODEL: ${{ secrets.LLM_MODEL }}
      LLM_PROMPT: ${{ secrets.LLM_PROMPT }}
      LLM_TOKEN: ${{ secrets.LLM_TOKEN }}
      LLM_URL: ${{ secrets.LLM_URL }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: books

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v46.0.1
      with:
        files: |
          processing/**.json
    
    - name: Process files
      id: process-files
      run: |
        OUTPUT_PATHS=""
        DELETED_FILES=""
        
        # Get the list of changed files
        CHANGED_FILES=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n')
        
        for file in $CHANGED_FILES; do
          # Extract filename components using regex
          if [[ "$(basename "$file")" =~ ^([a-zA-Z0-9]+)-([0-9]+)-([0-9]+)\.json$ ]]; then
            source="${BASH_REMATCH[1]}"
            bookid="${BASH_REMATCH[2]}"
            index="${BASH_REMATCH[3]}"
            
            # Pass file to translation script with error handling
            set +e
            output=$(python translate.py "$file" 2>&1)
            exit_code=$?
            set -e
            
            if [ $exit_code -eq 0 ]; then
              # Check if output contains success indicators
              if echo "$output" | grep -q "Writing output file"; then
                output_file=$(echo "$output" | grep "Writing output file" | awk '{print $NF}')
                echo "Successfully processed $file, output at $output_file"
                
                # Move generated file to temporary location
                mkdir -p /tmp/html_files
                mv "$output_file" /tmp/html_files/
                
                # Remove the processed JSON file
                git rm "$file"
                
                DELETED_FILES="$DELETED_FILES $file"
                OUTPUT_PATHS="$OUTPUT_PATHS /tmp/html_files/$(basename "$output_file")"
                # Debug output
                echo "DELETED_FILES: $DELETED_FILES"
                echo "OUTPUT_PATHS: $OUTPUT_PATHS"
              else
                echo "Failed to process $file: No output file created"
                exit 1
              fi
            else
              echo "Error processing $file: ${output}"
              exit $exit_code
            fi
          else
            echo "Skipping $file - filename pattern mismatch"
          fi
        done
        
        # Set outputs for subsequent steps
        echo "output_paths=${OUTPUT_PATHS}" >> $GITHUB_OUTPUT
        echo "deleted_files=${DELETED_FILES}" >> $GITHUB_OUTPUT
        
        # Fail if no files were processed
        if [ -z "$OUTPUT_PATHS" ] && [ -z "$DELETED_FILES" ]; then
          echo "::error::No changes to commit - failing workflow"
          exit 1
        fi
        
        # Fail if no files were processed
        if [ -z "$OUTPUT_PATHS" ] && [ -z "$DELETED_FILES" ]; then
          echo "::error::No changes to commit - failing workflow"
          exit 1
        fi

    - name: Configure Git
      run: |
        git config --local user.email "actions@github.com"
        git config --local user.name "GitHub Actions"

    - name: Commit and push changes
      run: |
        git commit -m "Add translated HTML files and delete processed JSON files"
        git push

    - name: Stage HTML files for pages branch
      run: |
        # Create temporary directory for HTML files
        mkdir -p /tmp/html_files
        # Move generated HTML files to temporary directory
        for file in ${{ steps.process-files.outputs.output_paths }}; do
          mv "$file" /tmp/html_files/
        done

    - name: Push HTML to pages branch
      run: |
        max_retries=3
        retry_wait=5
        attempt=0
        while [ $attempt -lt $max_retries ]; do
          # Switch to pages branch
          git checkout pages || git checkout -b pages
          git pull origin pages || true
          
          # Move HTML files from temporary location
          mv /tmp/html_files/* .
          
          # Add and commit changes
          git add .
          git commit -m "Add translated HTML files" || true
          
          if git push origin pages; then
            break
          fi
          attempt=$((attempt+1))
          echo "Push attempt $attempt failed, retrying in $retry_wait seconds..."
          sleep $retry_wait
        done
        if [ $attempt -eq $max_retries ]; then
          echo "::error::Failed to push changes after $max_retries attempts"
          exit 1
        fi

    - name: Remove JSON from books branch
      run: |
        max_retries=3
        retry_wait=5
        attempt=0
        while [ $attempt -lt $max_retries ]; do
          git checkout books
          git pull origin books
          for file in ${{ steps.process-files.outputs.deleted_files }}; do
            if [ -f "$file" ]; then
              git rm "$file"
            else
              echo "File $file not found, skipping removal"
            fi
          done
          git commit -m "Remove processed JSON files" || true
          git pull --rebase origin books
          if git push origin books; then
            break
          fi
          attempt=$((attempt+1))
          echo "Push attempt $attempt failed, retrying in $retry_wait seconds..."
          sleep $retry_wait
        done
        if [ $attempt -eq $max_retries ]; then
          echo "::error::Failed to push changes after $max_retries attempts"
          exit 1
        fi
